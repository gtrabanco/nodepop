#!/usr/bin/env node
"use strict";


/**
 * Module dependencies.
 */

var app = require('../app');
var cluster = require('cluster');

//Rapid access to the configuration
var config = app.get('app config');

if (cluster.isMaster) {

    cluster.on('listening', function(worker, address) {
        console.info('Worker id #%d with pid #%d is now connected to port %d', worker.id, worker.process.pid,
            address.port);
    });

    cluster.on('exit', function(worker, code, signal) {
        console.log('Worker pid #%d died with code: %d, and signal: %s', worker.process.pid , code, signal);
        console.log('Starting a new worker');
        cluster.fork();
    });

    cluster.on('disconnect', function(worker) {
        console.log('The worker id #%d has disconnected', worker.id);
    });

    let nCores = require('os').cpus().length;

    console.info('Starting a cluster app for %d cores.', nCores);

    // Fork workers.
    for (let i = 0; i < nCores; i++) {
        cluster.fork();
    }

    //console.log(cluster.workers);

} else {
    console.info('Starting a proccess child with pid # %d', process.pid);
    require('./singleCore');
}